services:
  # Production service: Express server serving React build
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"  # Maps host port 3000 to container port 3000
    environment:
      - NODE_ENV=production
      - PORT=3000
    restart: unless-stopped
    volumes:
      # For production, you might want to exclude volumes to use the built image as is
      []
    networks:
      - chazara-network
    profiles: ["prod", "default"]

  # Development API server
  api-dev:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3001"  # Maps host port 3001 to container port 3001
    environment:
      - NODE_ENV=development
      - PORT=3001
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    entrypoint: >
      sh -c "npm install && npm run dev"
    networks:
      - chazara-network
    profiles: ["dev"]

  # React development server
  react-dev:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - "3002:3000"  # Maps host port 3002 to container port 3000
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:3001  # Points to API server
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    command: npm start
    depends_on:
      - api-dev
    networks:
      - chazara-network
    profiles: ["dev"]

networks:
  chazara-network:
    driver: bridge